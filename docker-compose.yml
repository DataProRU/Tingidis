version: "3.8"
services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 2606QWmg
      POSTGRES_DB: users
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  db_tests:
    image: postgres:15
    container_name: postgres_db_tests
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 2606QWmg
      POSTGRES_DB: tests
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_tests:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - my_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  app:
    build: .
    container_name: fastapi_app
    restart: always
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: "postgresql+asyncpg://admin:2606QWmg@db/users"
      TEST_DATABASE_URL: "postgresql+asyncpg://admin:2606QWmg@db_tests:5433/tests"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - my_network

  celery:
    build: .
    container_name: celery_worker
    restart: always
    depends_on:
      - redis
    environment:
      DATABASE_URL: "postgresql+asyncpg://admin:2606QWmg@db/users"
      TEST_DATABASE_URL: "postgresql+asyncpg://admin:2606QWmg@db_tests:5433/tests"
    command: celery -A web_app.tasks.backups:celery worker --loglevel=INFO --pool=solo
    volumes:
      - .:/app
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
  postgres_data_tests: